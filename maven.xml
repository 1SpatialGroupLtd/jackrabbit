<!--
   Copyright 2004-2005 The Apache Software Foundation or its licensors,
                       as applicable.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project
  default="jar:jar"
  xmlns:j="jelly:core"
  xmlns:ant="jelly:ant">

   <postGoal name="ant:generate-build">
      <attainGoal   name="jackrabbit:post-ant"/>
   </postGoal>
   
   <!-- Goal adds a line to build.xml to include the ./lib in ant classpath -->
   <!-- Once jcr.jar is in a maven repository this can be removed -->
   <goal name="jackrabbit:post-ant">
      <ant:replace 
         file="build.xml"
         token="&lt;path id=&quot;build.classpath&quot;&gt;"
         value="&lt;path id=&quot;build.classpath&quot;&gt;&lt;fileset dir=&quot;./lib&quot;&gt;&lt;include name=&quot;**/*.jar&quot;>&lt;/include&gt;&lt;/fileset&gt;"
      />
   </goal>

   <postGoal name="maven-javadoc-plugin:report">
      <attainGoal   name="jackrabbit:post-javadoc"/>
   </postGoal>
   
   <!-- Goal strips the javadov generated datestamp -->
   <goal name="jackrabbit:post-javadoc">
      <ant:replaceregexp
           match="-- Generated by javadoc .*--"
         replace="-- Generated by javadoc --" flags="g" byline="true">
           <ant:fileset dir="${maven.javadoc.destdir}" includes="**/*.html">
             <ant:depth max="20"/>
           </ant:fileset>
      </ant:replaceregexp>
   </goal>
   
   <!-- Additionally cleans the test data created -->
   <postGoal name="clean">
      <attainGoal name="test:clean"/>
   </postGoal>
   
   <!-- deletes the test data -->
   <goal name="test:clean">
      <ant:delete includeEmptyDirs="true">
         <ant:fileset dir="applications/test/repository">
            <ant:include name="**/*"/>
            <ant:exclude name="**/custom_nodetypes.xml"/>
         </ant:fileset>
      </ant:delete>
      <ant:delete includeEmptyDirs="true">
         <ant:fileset dir="applications/test/workspaces">
            <ant:include name="**/*"/>
            <ant:exclude name="**/workspace.xml"/>
         </ant:fileset>
      </ant:delete>      
      <ant:delete dir="applications/test/tx"/>
      <ant:delete dir="applications/test/version"/>
   </goal>
   
   <postGoal name="java:prepare-filesystem">
      <attainGoal name="jackrabbit:generate-parsers"/>
   </postGoal>
   
   <goal name="jackrabbit:generate-parsers">
      <!-- SQL Parser -->
      <ant:java classname="jjtree" fork="true">
         <arg value="-OUTPUT_DIRECTORY=src/java/org/apache/jackrabbit/core/search/sql"/>
         <arg value="src/grammar/sql/JCRSQL.jjt"/>
         <classpath>
            <fileset dir="${maven.repo.local}/javacc/jars">
               <include name="javacc-3.2.jar"/>
            </fileset>
         </classpath>
      </ant:java>
      <ant:java classname="javacc" fork="true">
         <arg value="-OUTPUT_DIRECTORY=src/java/org/apache/jackrabbit/core/search/sql"/>
         <arg value="src/java/org/apache/jackrabbit/core/search/sql/JCRSQL.jj"/>
         <classpath>
            <fileset dir="${maven.repo.local}/javacc/jars">
               <include name="javacc-3.2.jar"/>
            </fileset>
         </classpath>
      </ant:java>


      <!-- XPath Parser -->
      <!-- The following is a hack to get xslt work with maven (See: http://maven.apache.org/faq.html#BadXSLT ) -->
      ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}
      
      <ant:xslt style="src/grammar/xpath/strip.xsl"
             in="src/grammar/xpath/xpath-grammar.xml"
             out="src/grammar/xpath/stripped-xpath-grammar.xml"
             force="yes">
      </ant:xslt>
      <ant:xslt style="src/grammar/xpath/jjtree-jackrabbit.xsl"
             in="src/grammar/xpath/stripped-xpath-grammar.xml"
             out="src/grammar/xpath/XPath.jjt"
             force="yes">
      </ant:xslt>


      <ant:java classname="jjtree" fork="true">
         <arg value="-OUTPUT_DIRECTORY=src/java/org/apache/jackrabbit/core/search/xpath"/>
         <arg value="src/grammar/xpath/XPath.jjt"/>
         <classpath>
            <fileset dir="${maven.repo.local}/javacc/jars">
               <include name="javacc-3.2.jar"/>
            </fileset>
         </classpath>
      </ant:java>
      <ant:java classname="javacc" fork="true">
         <arg value="-OUTPUT_DIRECTORY=src/java/org/apache/jackrabbit/core/search/xpath"/>
         <arg value="-UNICODE_INPUT=true"/>
         <arg value="src/java/org/apache/jackrabbit/core/search/xpath/XPath.jj"/>
         <classpath>
            <fileset dir="${maven.repo.local}/javacc/jars">
               <include name="javacc-3.2.jar"/>
            </fileset>
         </classpath>
      </ant:java>

   </goal>

</project>
